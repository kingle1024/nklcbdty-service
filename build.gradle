buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.6'
	id 'io.spring.dependency-management' version '1.1.5' // Spring Boot 3.x에 맞는 버전
}

group = 'com.nklcbdty'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17) // Java 17 버전
	}
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
    querydslAnnotationProcessor
}

repositories {
	mavenCentral() // Maven 중앙 저장소
    maven { url 'https://repo.spring.io/milestone' }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:1.0.0-M1"
    }
}


dependencies {
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:1.0.0-M6'

	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.6.4'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.2'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.1'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.1'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    querydslAnnotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    querydslAnnotationProcessor "jakarta.persistence:jakarta.persistence-api"
    querydslAnnotationProcessor "jakarta.annotation:jakarta.annotation-api"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
    // ====================================


	// Jsoup 크롤링 라이브러리
	implementation 'org.jsoup:jsoup:1.17.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.data:spring-data-elasticsearch'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.json:json:20240303'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.kafka:spring-kafka'

}

test {
    useJUnitPlatform()
}

def generatedQuerydslDir = "$buildDir/generated/querydsl"

// JavaCompile task 설정
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.annotationProcessorPath = configurations.annotationProcessor + configurations.querydslAnnotationProcessor
    options.generatedSourceOutputDirectory.set(file(generatedQuerydslDir))
}
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', generatedQuerydslDir]
        }
    }
}

clean {
    delete file(generatedQuerydslDir)
}

bootJar {
    manifest {
        attributes(
            'Manifest-Version': '1.0',
            'Main-Class': 'org.springframework.boot.loader.launch.JarLauncher', // SB 3.x 런처
            'Start-Class': 'com.nklcbdty.api.NklcbdtyApplication', // 실제 메인 클래스 경로
        )
    }
}

bootRun {
    jvmArgs = ['-Dfile.encoding=UTF-8','-Dconsole.encoding=UTF-8']
}
